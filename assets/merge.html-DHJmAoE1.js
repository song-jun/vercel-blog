import{_ as m,c as n,d as e,a as i,g as r,r as a,o as l}from"./app-Ciqs_Xc9.js";const p={};function c(s,t){const o=a("Mermaid");return l(),n("div",null,[t[0]||(t[0]=e("h2",{id:"squash-merge",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#squash-merge"},[e("span",null,"Squash merge")])],-1)),t[1]||(t[1]=e("p",null,[r("通过使用 "),e("code",null,"--squash"),r(" 选项，你可以在合并中将多个 commit 合并为一个。")],-1)),t[2]||(t[2]=e("p",null,"也就是对于以下的例子",-1)),i(o,{id:"mermaid-9",code:"eJxLzyxxL0osyOBSUEjOz83NLFHITLFSyk3MzDNUAoolFSXmJWcopKUmlpQWpaIqggqC1SVnpCZn55eWKIB0YpplhKIGn2moKqGm5aYWpafCtQEAlZs6wQ=="}),t[3]||(t[3]=e("p",null,[e("code",null,"git merge feature"),r(" 得到的结果为:")],-1)),i(o,{id:"mermaid-13",code:"eJxLzyxxL0osyOBSUEjOz83NLFHITLFSyk3MzDNUQhVLS00sKS1KRRcGKTXCrhRdODe1KD0VKqDEBQBpQycY"}),t[4]||(t[4]=e("p",null,[r("而如果 "),e("code",null,"feature"),r(" 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 "),e("code",null,"git merge --squash feature"),r(" 得到:")],-1)),i(o,{id:"mermaid-17",code:"eJxLzyxxL0osyOBSUEjOz83NLFHITLFSyk3MzDNUwhQzQhMrLixNLM5QyE0tSk9VKEotLs0pUeICAGwNGyw="}),t[5]||(t[5]=e("h2",{id:"cherry-pick",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cherry-pick"},[e("span",null,"Cherry pick")])],-1)),t[6]||(t[6]=e("p",null,"有些时候，我们可能需要提取其他分支的某个 commit，这个时候我们可以用 cherry pick 进行操作。",-1)),i(o,{id:"mermaid-24",code:"eJxLzyxxL0osyOBSUEjOz83NLAEykooS85IzFHKLMvILUuESCpkpVkppqYklpUWpjgpGBqpKOKRMMKSSStMV0jIrcGkww22WBVQqIzU5O7+0RCE3MTMPwi8qqtQtyEzOxrAArhSf8w0NsBucm1qUngrTCgDhNlnE"}),t[7]||(t[7]=e("p",null,[r("在这种情况下，我们可以回到 main 分支，执行 "),e("code",null,"git cherry-pick <commit id>"),r(" 来挑拣某个提交，当然，你可以一并在命令中提交挑拣多个 commit。")],-1)),i(o,{id:"mermaid-28",code:"eJx9j0sKhDAMQPdziiDMckBlGAZ3rjxHrbENEltCC3p7BT8brbuEx8sjhkIjytsXgHbMFNahFTVqCyzWeTwBUFdlPaoQBWso83eWQN8LaqOBnqYiZfxSRpky/rthUQ8uBmBF47aLzB9PeriG79mWOO88/Vzk91VGMXioC90zaig="}),t[8]||(t[8]=e("ul",null,[e("li",null,[e("code",null,"git cherry-pick <commit id 1> <commit id 2>"),r(" 表示挑拣 commit id 1 和 commit id 2")]),e("li",null,[e("code",null,"git cherry-pick <commit id 1>...<commit id 2>"),r(" 表示挑拣 commit id 1 与 commit id 2 之间 (包括两者) 的所有提交")]),e("li",null,[e("code",null,"git cherry-pick <branch>"),r(" 表示挑拣该分支最新的提交")])],-1))])}const g=m(p,[["render",c],["__file","merge.html.vue"]]),u=JSON.parse('{"path":"/software/git/merge.html","title":"高级合并","lang":"zh-CN","frontmatter":{"title":"高级合并","icon":"merge","order":17,"category":"Git","tag":["Git","软件"],"description":"Squash merge 通过使用 --squash 选项，你可以在合并中将多个 commit 合并为一个。 也就是对于以下的例子 git merge feature 得到的结果为: 而如果 feature 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 git merge --squash featur...","head":[["meta",{"property":"og:url","content":"https://www.songjun520.cn/software/git/merge.html"}],["meta",{"property":"og:site_name","content":"Mr.Song"}],["meta",{"property":"og:title","content":"高级合并"}],["meta",{"property":"og:description","content":"Squash merge 通过使用 --squash 选项，你可以在合并中将多个 commit 合并为一个。 也就是对于以下的例子 git merge feature 得到的结果为: 而如果 feature 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 git merge --squash featur..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-04T10:17:55.000Z"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"软件"}],["meta",{"property":"article:modified_time","content":"2024-11-04T10:17:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高级合并\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-04T10:17:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Song\\",\\"url\\":\\"https://www.songjun520.cn/\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://www.songjun520.cn/atom.xml","title":"Mr.Song Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://www.songjun520.cn/feed.json","title":"Mr.Song JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.songjun520.cn/rss.xml","title":"Mr.Song RSS Feed"}]]},"headers":[{"level":2,"title":"Squash merge","slug":"squash-merge","link":"#squash-merge","children":[]},{"level":2,"title":"Cherry pick","slug":"cherry-pick","link":"#cherry-pick","children":[]}],"git":{"createdTime":1730715475000,"updatedTime":1730715475000,"contributors":[{"name":"宋军","email":"289097246@qq.com","commits":1}]},"readingTime":{"minutes":1.37,"words":411},"filePathRelative":"software/git/merge.md","localizedDate":"2024年11月4日","excerpt":"<h2>Squash merge</h2>\\n<p>通过使用 <code>--squash</code> 选项，你可以在合并中将多个 commit 合并为一个。</p>\\n<p>也就是对于以下的例子</p>\\n<p><code>git merge feature</code> 得到的结果为:</p>\\n<p>而如果 <code>feature</code> 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 <code>git merge --squash feature</code> 得到:</p>\\n<h2>Cherry pick</h2>\\n<p>有些时候，我们可能需要提取其他分支的某个 commit，这个时候我们可以用 cherry pick 进行操作。</p>","autoDesc":true}');export{g as comp,u as data};
